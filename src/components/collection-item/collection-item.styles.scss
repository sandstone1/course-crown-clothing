
.collection-item {
    display               : grid;
    grid-template-rows    : 1fr min-content;    
    position              : relative;
    height                : 450px;
    
    &--image {

        // w3schools said: " How To Create Responsive Images? If you want the image to scale
        // both up and down on responsiveness, set the CSS width property to 100% and height
        // to auto ( i.e. { width : 100%; height : auto; } ) " and " If you want an image to
        // scale down if it has to, but never scale up to be larger than its original size,
        // use max-width: 100%; ( i.e. { max-width : 100%; height : auto; } ) "

        width  : 100%;
        height : auto;

        background-size     : cover;
        background-position : center;

        transition : all 0.3s ease;
    }

    &--footer {
        display               : grid;
        grid-template-rows    : min-content;
        grid-template-columns : repeat( 2, max-content );
        justify-content       : space-between;
        margin                : 10px 0 0 0;

        font-size : 18px;
    }

    // -- Mark 1 --
    // lecture 109: Add to Cart Styling
    // remember to add " position : relative; " above and remember we are modifying the
    // custom-button class styling in the custom-button.styles.scss file and remember
    // we only want to see the custom button when we hover the CollectionItem component so
    // let set up the hover effect below
    .custom-button {
        display  : none;

        transition : all 0.3s ease;
    }

    // below we are saying: "when were hoving our CollectionItem component then apply the
    // following styles to the image and to the CustomButton component "
    &:hover {

        .collection-item--image {
            opacity: 0.8;
        }

        .custom-button {
            display      : grid;
            justify-self : center;
            position     : absolute;
            width        : 80%;
            top          : 340px;

            opacity : 0.7;
            outline : none;
        }

    }
    // now our application can support the add item feature that we will build in the next
    // lecture
    // End of -- Mark 1 --
}

